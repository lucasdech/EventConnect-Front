{
  "version": 3,
  "sources": ["../../../../../node_modules/laravel-echo/dist/echo.js"],
  "sourcesContent": ["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\n/**\r\n * This class represents a basic channel.\r\n */\nvar Channel = /*#__PURE__*/function () {\n  function Channel() {\n    _classCallCheck(this, Channel);\n  }\n  _createClass(Channel, [{\n    key: \"listenForWhisper\",\n    value:\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\n    function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n  }, {\n    key: \"notification\",\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\n  }, {\n    key: \"stopListeningForWhisper\",\n    value: function stopListeningForWhisper(event, callback) {\n      return this.stopListening('.client-' + event, callback);\n    }\n  }]);\n  return Channel;\n}();\n\n/**\r\n * Event name formatter\r\n */\nvar EventFormatter = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function EventFormatter(namespace) {\n    _classCallCheck(this, EventFormatter);\n    this.namespace = namespace; //\n  }\n  /**\r\n   * Format the given event name.\r\n   */\n\n  _createClass(EventFormatter, [{\n    key: \"format\",\n    value: function format(event) {\n      if (['.', '\\\\'].includes(event.charAt(0))) {\n        return event.substring(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\r\n     * Set the event namespace.\r\n     */\n  }, {\n    key: \"setNamespace\",\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n  return EventFormatter;\n}();\n\n/**\r\n * This class represents a Pusher channel.\r\n */\n\nvar PusherChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PusherChannel, _Channel);\n  var _super = _createSuper(PusherChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function PusherChannel(pusher, name, options) {\n    var _this;\n    _classCallCheck(this, PusherChannel);\n    _this = _super.call(this);\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n    _this.subscribe();\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n  _createClass(PusherChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      var _this2 = this;\n      this.subscription.bind_global(function (event, data) {\n        if (event.startsWith('pusher:')) {\n          return;\n        }\n        var namespace = _this2.options.namespace.replace(/\\./g, '\\\\');\n        var formattedEvent = event.startsWith(namespace) ? event.substring(namespace.length + 1) : '.' + event;\n        callback(formattedEvent, data);\n      });\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      if (callback) {\n        this.subscription.unbind(this.eventFormatter.format(event), callback);\n      } else {\n        this.subscription.unbind(this.eventFormatter.format(event));\n      }\n      return this;\n    }\n    /**\r\n     * Stop listening for all events on the channel instance.\r\n     */\n  }, {\n    key: \"stopListeningToAll\",\n    value: function stopListeningToAll(callback) {\n      if (callback) {\n        this.subscription.unbind_global(callback);\n      } else {\n        this.subscription.unbind_global();\n      }\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('pusher:subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('pusher:subscription_error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n  return PusherChannel;\n}(Channel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPrivateChannel, _PusherChannel);\n  var _super = _createSuper(PusherPrivateChannel);\n  function PusherPrivateChannel() {\n    _classCallCheck(this, PusherPrivateChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PusherPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n  return PusherPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);\n  var _super = _createSuper(PusherEncryptedPrivateChannel);\n  function PusherEncryptedPrivateChannel() {\n    _classCallCheck(this, PusherEncryptedPrivateChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PusherEncryptedPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n  return PusherEncryptedPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher presence channel.\r\n */\n\nvar PusherPresenceChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPresenceChannel, _PusherChannel);\n  var _super = _createSuper(PusherPresenceChannel);\n  function PusherPresenceChannel() {\n    _classCallCheck(this, PusherPresenceChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PusherPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n  }]);\n  return PusherPresenceChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Socket.io channel.\r\n */\n\nvar SocketIoChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(SocketIoChannel, _Channel);\n  var _super = _createSuper(SocketIoChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function SocketIoChannel(socket, name, options) {\n    var _this;\n    _classCallCheck(this, SocketIoChannel);\n    _this = _super.call(this);\n    /**\r\n     * The event callbacks applied to the socket.\r\n     */\n\n    _this.events = {};\n    /**\r\n     * User supplied callbacks for events on this channel.\r\n     */\n\n    _this.listeners = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n    _this.subscribe();\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Socket.io channel.\r\n   */\n\n  _createClass(SocketIoChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Unsubscribe from channel and ubind event callbacks.\r\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.unbindEvent(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('connect', function (socket) {\n        callback(socket);\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind the channel's socket to an event and store the callback.\r\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n      this.listeners[event] = this.listeners[event] || [];\n      if (!this.events[event]) {\n        this.events[event] = function (channel, data) {\n          if (_this2.name === channel && _this2.listeners[event]) {\n            _this2.listeners[event].forEach(function (cb) {\n              return cb(data);\n            });\n          }\n        };\n        this.socket.on(event, this.events[event]);\n      }\n      this.listeners[event].push(callback);\n      return this;\n    }\n    /**\r\n     * Unbind the channel's socket from all stored event callbacks.\r\n     */\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var _this3 = this;\n      Object.keys(this.events).forEach(function (event) {\n        _this3.unbindEvent(event);\n      });\n    }\n    /**\r\n     * Unbind the listeners for the given event.\r\n     */\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(event, callback) {\n      this.listeners[event] = this.listeners[event] || [];\n      if (callback) {\n        this.listeners[event] = this.listeners[event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n      if (!callback || this.listeners[event].length === 0) {\n        if (this.events[event]) {\n          this.socket.removeListener(event, this.events[event]);\n          delete this.events[event];\n        }\n        delete this.listeners[event];\n      }\n    }\n  }]);\n  return SocketIoChannel;\n}(Channel);\n\n/**\r\n * This class represents a Socket.io private channel.\r\n */\n\nvar SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {\n  _inherits(SocketIoPrivateChannel, _SocketIoChannel);\n  var _super = _createSuper(SocketIoPrivateChannel);\n  function SocketIoPrivateChannel() {\n    _classCallCheck(this, SocketIoPrivateChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SocketIoPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n  }]);\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\n/**\r\n * This class represents a Socket.io presence channel.\r\n */\n\nvar SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {\n  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n  var _super = _createSuper(SocketIoPresenceChannel);\n  function SocketIoPresenceChannel() {\n    _classCallCheck(this, SocketIoPresenceChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SocketIoPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\n/**\r\n * This class represents a null channel.\r\n */\n\nvar NullChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(NullChannel, _Channel);\n  var _super = _createSuper(NullChannel);\n  function NullChannel() {\n    _classCallCheck(this, NullChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(NullChannel, [{\n    key: \"subscribe\",\n    value:\n    /**\r\n     * Subscribe to a channel.\r\n     */\n    function subscribe() {//\n    }\n    /**\r\n     * Unsubscribe from a channel.\r\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {//\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n  return NullChannel;\n}(Channel);\n\n/**\r\n * This class represents a null private channel.\r\n */\n\nvar NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPrivateChannel, _NullChannel);\n  var _super = _createSuper(NullPrivateChannel);\n  function NullPrivateChannel() {\n    _classCallCheck(this, NullPrivateChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(NullPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n  return NullPrivateChannel;\n}(NullChannel);\n\n/**\r\n * This class represents a null presence channel.\r\n */\n\nvar NullPresenceChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPresenceChannel, _NullChannel);\n  var _super = _createSuper(NullPresenceChannel);\n  function NullPresenceChannel() {\n    _classCallCheck(this, NullPresenceChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(NullPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      return this;\n    }\n  }]);\n  return NullPresenceChannel;\n}(NullChannel);\nvar Connector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Connector(options) {\n    _classCallCheck(this, Connector);\n\n    /**\r\n     * Default connector options.\r\n     */\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      userAuthentication: {\n        endpoint: '/broadcasting/user-auth',\n        headers: {}\n      },\n      broadcaster: 'pusher',\n      csrfToken: null,\n      bearerToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\r\n   * Merge the custom options with the defaults.\r\n   */\n\n  _createClass(Connector, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n      var token = this.csrfToken();\n      if (token) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = token;\n        this.options.userAuthentication.headers['X-CSRF-TOKEN'] = token;\n      }\n      token = this.options.bearerToken;\n      if (token) {\n        this.options.auth.headers['Authorization'] = 'Bearer ' + token;\n        this.options.userAuthentication.headers['Authorization'] = 'Bearer ' + token;\n      }\n      return options;\n    }\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\n  }, {\n    key: \"csrfToken\",\n    value: function csrfToken() {\n      var selector;\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n      return null;\n    }\n  }]);\n  return Connector;\n}();\n\n/**\r\n * This class creates a connector to Pusher.\r\n */\n\nvar PusherConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(PusherConnector, _Connector);\n  var _super = _createSuper(PusherConnector);\n  function PusherConnector() {\n    var _this;\n    _classCallCheck(this, PusherConnector);\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Pusher connection.\r\n   */\n\n  _createClass(PusherConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else if (this.options.Pusher) {\n        this.pusher = new this.options.Pusher(this.options.key, this.options);\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\r\n     * Sign in the user via Pusher user authentication (https://pusher.com/docs/channels/using_channels/user-authentication/).\r\n     */\n  }, {\n    key: \"signin\",\n    value: function signin() {\n      this.pusher.signin();\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      if (!this.channels['private-encrypted-' + name]) {\n        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);\n      }\n      return this.channels['private-encrypted-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n      var channels = [name, 'private-' + name, 'private-encrypted-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\r\n     * Disconnect Pusher connection.\r\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n  return PusherConnector;\n}(Connector);\n\n/**\r\n * This class creates a connnector to a Socket.io server.\r\n */\n\nvar SocketIoConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(SocketIoConnector, _Connector);\n  var _super = _createSuper(SocketIoConnector);\n  function SocketIoConnector() {\n    var _this;\n    _classCallCheck(this, SocketIoConnector);\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n  _createClass(SocketIoConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      this.socket.on('reconnect', function () {\n        Object.values(_this2.channels).forEach(function (channel) {\n          channel.subscribe();\n        });\n      });\n      return this.socket;\n    }\n    /**\r\n     * Get socket.io module from global scope or options.\r\n     */\n  }, {\n    key: \"getSocketIO\",\n    value: function getSocketIO() {\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this3 = this;\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this3.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\r\n     * Disconnect Socketio connection.\r\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n  return SocketIoConnector;\n}(Connector);\n\n/**\r\n * This class creates a null connector.\r\n */\n\nvar NullConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(NullConnector, _Connector);\n  var _super = _createSuper(NullConnector);\n  function NullConnector() {\n    var _this;\n    _classCallCheck(this, NullConnector);\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh connection.\r\n   */\n\n  _createClass(NullConnector, [{\n    key: \"connect\",\n    value: function connect() {//\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n  }, {\n    key: \"leave\",\n    value: function leave(name) {//\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {//\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\r\n     * Disconnect the connection.\r\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {//\n    }\n  }]);\n  return NullConnector;\n}(Connector);\n\n/**\r\n * This class is the primary API for interacting with broadcasting.\r\n */\n\nvar Echo = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Echo(options) {\n    _classCallCheck(this, Echo);\n    this.options = options;\n    this.connect();\n    if (!this.options.withoutInterceptors) {\n      this.registerInterceptors();\n    }\n  }\n  /**\r\n   * Get a channel instance by name.\r\n   */\n\n  _createClass(Echo, [{\n    key: \"channel\",\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\r\n     * Create a new connection.\r\n     */\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.options.broadcaster == 'reverb') {\n        this.connector = new PusherConnector(_extends(_extends({}, this.options), {\n          cluster: ''\n        }));\n      } else if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      } else if (typeof this.options.broadcaster == 'function') {\n        this.connector = new this.options.broadcaster(this.options);\n      } else {\n        throw new Error(\"Broadcaster \".concat(_typeof(this.options.broadcaster), \" \").concat(this.options.broadcaster, \" is not supported.\"));\n      }\n    }\n    /**\r\n     * Disconnect from the Echo server.\r\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n  }, {\n    key: \"join\",\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n  }, {\n    key: \"leave\",\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\r\n     * Leave all channels.\r\n     */\n  }, {\n    key: \"leaveAllChannels\",\n    value: function leaveAllChannels() {\n      for (var channel in this.connector.channels) {\n        this.leaveChannel(channel);\n      }\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n  }, {\n    key: \"listen\",\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n  }, {\n    key: \"private\",\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n  }, {\n    key: \"encryptedPrivate\",\n    value: function encryptedPrivate(channel) {\n      return this.connector.encryptedPrivateChannel(channel);\n    }\n    /**\r\n     * Get the Socket ID for the connection.\r\n     */\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\r\n     * Register 3rd party request interceptiors. These are used to automatically\r\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\r\n     */\n  }, {\n    key: \"registerInterceptors\",\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n      if ((typeof Turbo === \"undefined\" ? \"undefined\" : _typeof(Turbo)) === 'object') {\n        this.registerTurboRequestInterceptor();\n      }\n    }\n    /**\r\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\r\n     */\n  }, {\n    key: \"registerVueRequestInterceptor\",\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n        next();\n      });\n    }\n    /**\r\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\r\n     */\n  }, {\n    key: \"registerAxiosRequestInterceptor\",\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n        return config;\n      });\n    }\n    /**\r\n     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.\r\n     */\n  }, {\n    key: \"registerjQueryAjaxSetup\",\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (_this3.socketId()) {\n            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n          }\n        });\n      }\n    }\n    /**\r\n     * Register the Turbo Request interceptor to add the X-Socket-ID header.\r\n     */\n  }, {\n    key: \"registerTurboRequestInterceptor\",\n    value: function registerTurboRequestInterceptor() {\n      var _this4 = this;\n      document.addEventListener('turbo:before-fetch-request', function (event) {\n        event.detail.fetchOptions.headers['X-Socket-Id'] = _this4.socketId();\n      });\n    }\n  }]);\n  return Echo;\n}();\nexport { Channel, Connector, EventFormatter, Echo as default };"],
  "mappings": "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",
  "names": ["obj", "_getPrototypeOf", "o", "_setPrototypeOf", "p", "Channel", "EventFormatter", "PusherChannel", "PusherPrivateChannel", "PusherEncryptedPrivateChannel", "PusherPresenceChannel", "SocketIoChannel", "SocketIoPrivateChannel", "SocketIoPresenceChannel", "NullChannel", "NullPrivateChannel", "NullPresenceChannel", "Connector", "PusherConnector", "name", "SocketIoConnector", "io", "NullConnector", "Echo"]
}
