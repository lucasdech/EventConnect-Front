import { InputSignal } from '@angular/core';
import { BadgePositions, Colors, Shapes, TextColors } from '../coreui.types';
import * as i0 from "@angular/core";
import * as i1 from "../utilities/text-color.directive";
import * as i2 from "../utilities/text-bg-color.directive";
export declare class BadgeComponent {
    /**
     * Sets the color context of the component to one of CoreUI’s themed colors.
     * @type Colors
     */
    readonly color: InputSignal<Colors | undefined>;
    /**
     * Position badge in one of the corners of a link or button.
     * @type BadgePositions
     */
    readonly position: InputSignal<BadgePositions | undefined>;
    /**
     * Select the shape of the component.
     * @type Shapes
     */
    readonly shape: InputSignal<Shapes | undefined>;
    /**
     * Size the component small.
     */
    readonly size: InputSignal<'sm' | undefined>;
    /**
     * Sets the text color of the component to one of CoreUI’s themed colors.
     * via TextColorDirective
     * @type TextColors
     */
    readonly textColor: InputSignal<TextColors | undefined>;
    /**
     * Sets the component's color scheme to one of CoreUI's themed colors, ensuring the text color contrast adheres to the WCAG 4.5:1 contrast ratio standard for accessibility.
     * via TextBgColorDirective
     * @type Colors
     * @since 5.0.0
     */
    readonly textBgColor: InputSignal<Colors | undefined>;
    readonly hostClasses: import("@angular/core").Signal<Record<string, boolean>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<BadgeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BadgeComponent, "c-badge", never, { "color": { "alias": "color"; "required": false; "isSignal": true; }; "position": { "alias": "position"; "required": false; "isSignal": true; }; "shape": { "alias": "shape"; "required": false; "isSignal": true; }; "size": { "alias": "size"; "required": false; "isSignal": true; }; "textColor": { "alias": "textColor"; "required": false; "isSignal": true; }; "textBgColor": { "alias": "textBgColor"; "required": false; "isSignal": true; }; }, {}, never, ["*"], true, [{ directive: typeof i1.TextColorDirective; inputs: { "cTextColor": "textColor"; }; outputs: {}; }, { directive: typeof i2.TextBgColorDirective; inputs: { "cTextBgColor": "textBgColor"; }; outputs: {}; }]>;
}
