import { WritableSignal } from '@angular/core';
import * as i0 from "@angular/core";
export type ColorMode = 'light' | 'dark' | 'auto' | string | undefined;
export declare class ColorModeService {
    #private;
    readonly eventName: WritableSignal<string>;
    readonly localStorageItemName: WritableSignal<string | undefined>;
    readonly localStorageItemName$: import("rxjs").Observable<string | undefined>;
    readonly colorMode: WritableSignal<ColorMode>;
    readonly colorModeEffect: import("@angular/core").EffectRef;
    constructor();
    getStoredTheme(localStorageItemName: string): any;
    setStoredTheme(localStorageItemName: string, colorMode: string): void;
    removeStoredTheme(localStorageItemName: string): void;
    getDefaultScheme(localStorageItemName: string | undefined): any;
    getPrefersColorScheme(): "dark" | "light" | undefined;
    getDatasetTheme(): ColorMode;
    static ɵfac: i0.ɵɵFactoryDeclaration<ColorModeService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ColorModeService>;
}
