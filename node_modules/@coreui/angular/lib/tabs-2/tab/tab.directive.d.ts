import { FocusableOption, FocusOrigin } from '@angular/cdk/a11y';
import { InputSignal } from '@angular/core';
import * as i0 from "@angular/core";
export declare class TabDirective implements FocusableOption {
    #private;
    /**
     * Disabled attribute
     * @type boolean
     * @default false
     */
    set disabled(value: boolean);
    get disabled(): boolean;
    readonly attrDisabled: import("@angular/core").Signal<true | null>;
    /**
     * Item key.
     * @type string | number
     * @required
     */
    readonly itemKey: InputSignal<string | number>;
    /**
     * Element id attribute
     * @type string
     * @default undefined
     */
    readonly id: InputSignal<string | undefined>;
    /**
     * aria-controls attribute
     * @type string
     * @default undefined
     */
    readonly ariaControls: InputSignal<string | undefined>;
    readonly isActive: import("@angular/core").Signal<boolean>;
    readonly hostClasses: import("@angular/core").Signal<{
        'nav-link': boolean;
        active: boolean;
        disabled: boolean;
    }>;
    readonly propId: import("@angular/core").Signal<string>;
    readonly attrAriaControls: import("@angular/core").Signal<string>;
    disabledEffect: import("@angular/core").EffectRef;
    focus(origin?: FocusOrigin): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TabDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TabDirective, "button[cTab]", ["cTab"], { "disabled": { "alias": "disabled"; "required": false; }; "itemKey": { "alias": "itemKey"; "required": true; "isSignal": true; }; "id": { "alias": "id"; "required": false; "isSignal": true; }; "ariaControls": { "alias": "aria-controls"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
    static ngAcceptInputType_disabled: unknown;
}
