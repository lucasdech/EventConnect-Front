import { AnimationEvent } from '@angular/animations';
import { InputSignal, InputSignalWithTransform, OutputEmitterRef } from '@angular/core';
import { TabsService } from '../tabs.service';
import * as i0 from "@angular/core";
type AnimateType = 'hide' | 'show';
type VisibleChangeEvent = {
    itemKey: string | number;
    visible: boolean;
};
export declare class TabPanelComponent {
    readonly tabsService: TabsService;
    /**
     * aria-labelledby attribute
     * @type string
     * @default undefined
     */
    readonly ariaLabelledBy: InputSignal<string | undefined>;
    /**
     * Element id attribute
     * @type string
     * @default undefined
     */
    readonly id: InputSignal<string | undefined>;
    /**
     * Item key.
     * @type string | number
     * @required
     */
    readonly itemKey: InputSignal<string | number>;
    /**
     * tabindex attribute.
     * @type number
     * @default 0
     */
    readonly tabindex: InputSignalWithTransform<number, unknown>;
    /**
     * Enable fade in transition.
     * @type boolean
     * @default true
     */
    readonly transition: InputSignal<boolean>;
    /**
     * visible change output
     * @type OutputEmitterRef<VisibleChangeEvent>
     */
    readonly visibleChange: OutputEmitterRef<VisibleChangeEvent>;
    readonly show: import("@angular/core").WritableSignal<boolean>;
    readonly visible: import("@angular/core").Signal<boolean>;
    readonly propId: import("@angular/core").Signal<string>;
    readonly attrAriaLabelledBy: import("@angular/core").Signal<string>;
    readonly hostClasses: import("@angular/core").Signal<{
        'tab-pane': boolean;
        active: boolean;
        fade: boolean;
        show: boolean;
        invisible: any;
    }>;
    get animationDisabled(): boolean;
    get animateType(): AnimateType;
    onAnimationDone($event: AnimationEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TabPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TabPanelComponent, "c-tab-panel", ["cTabPanel"], { "ariaLabelledBy": { "alias": "aria-labelledby"; "required": false; "isSignal": true; }; "id": { "alias": "id"; "required": false; "isSignal": true; }; "itemKey": { "alias": "itemKey"; "required": true; "isSignal": true; }; "tabindex": { "alias": "tabindex"; "required": false; "isSignal": true; }; "transition": { "alias": "transition"; "required": false; "isSignal": true; }; }, { "visibleChange": "visibleChange"; }, never, ["*"], true, never>;
}
export {};
