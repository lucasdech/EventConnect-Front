import { Component, HostBinding, Input } from '@angular/core';
import { CardBodyComponent, CardHeaderComponent } from '../../card';
import { ColComponent, RowDirective } from '../../grid';
import { NgClass } from '@angular/common';
import * as i0 from "@angular/core";
export class WidgetStatDComponent {
    get hostClasses() {
        return {
            card: true
        };
    }
    get headerClasses() {
        return {
            'position-relative': true,
            'd-flex': true,
            'justify-content-center': true,
            'align-items-center': true,
            [`bg-${this.color}`]: this.color
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: WidgetStatDComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.2", type: WidgetStatDComponent, isStandalone: true, selector: "c-widget-stat-d", inputs: { color: "color", values: "values" }, host: { properties: { "class": "this.hostClasses" }, classAttribute: "card" }, exportAs: ["cWidgetStatD"], ngImport: i0, template: "<c-card-header [ngClass]=\"headerClasses\">\n  <ng-content />\n</c-card-header>\n<c-card-body cRow class=\"text-center\">\n  @for (item of values; track item; let i = $index) {\n    @if (i % 2 !== 0) {\n      <div class=\"vr\"></div>\n    }\n    <c-col>\n      <div class=\"fs-5 fw-semibold\">{{ item.value }}</div>\n      <div class=\"text-uppercase text-body-secondary small\">{{ item.title }}</div>\n    </c-col>\n  }\n</c-card-body>\n", dependencies: [{ kind: "component", type: CardHeaderComponent, selector: "c-card-header, [c-card-header]" }, { kind: "component", type: CardBodyComponent, selector: "c-card-body, [c-card-body]" }, { kind: "component", type: ColComponent, selector: "c-col" }, { kind: "directive", type: RowDirective, selector: "[cRow]", inputs: ["xs", "sm", "md", "lg", "xl", "xxl"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: WidgetStatDComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c-widget-stat-d', exportAs: 'cWidgetStatD', standalone: true, imports: [CardHeaderComponent, CardBodyComponent, ColComponent, RowDirective, NgClass], host: { class: 'card' }, template: "<c-card-header [ngClass]=\"headerClasses\">\n  <ng-content />\n</c-card-header>\n<c-card-body cRow class=\"text-center\">\n  @for (item of values; track item; let i = $index) {\n    @if (i % 2 !== 0) {\n      <div class=\"vr\"></div>\n    }\n    <c-col>\n      <div class=\"fs-5 fw-semibold\">{{ item.value }}</div>\n      <div class=\"text-uppercase text-body-secondary small\">{{ item.title }}</div>\n    </c-col>\n  }\n</c-card-body>\n" }]
        }], propDecorators: { color: [{
                type: Input
            }], values: [{
                type: Input
            }], hostClasses: [{
                type: HostBinding,
                args: ['class']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LXN0YXQtZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL3dpZGdldC93aWRnZXQtc3RhdC1kL3dpZGdldC1zdGF0LWQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi93aWRnZXQvd2lkZ2V0LXN0YXQtZC93aWRnZXQtc3RhdC1kLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDcEUsT0FBTyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDeEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDOztBQWUxQyxNQUFNLE9BQU8sb0JBQW9CO0lBWS9CLElBQ0ksV0FBVztRQUNiLE9BQU87WUFDTCxJQUFJLEVBQUUsSUFBSTtTQUNYLENBQUM7SUFDSixDQUFDO0lBRUQsSUFBSSxhQUFhO1FBQ2YsT0FBTztZQUNMLG1CQUFtQixFQUFFLElBQUk7WUFDekIsUUFBUSxFQUFFLElBQUk7WUFDZCx3QkFBd0IsRUFBRSxJQUFJO1lBQzlCLG9CQUFvQixFQUFFLElBQUk7WUFDMUIsQ0FBQyxNQUFNLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLO1NBQ2pDLENBQUM7SUFDSixDQUFDOzhHQTNCVSxvQkFBb0I7a0dBQXBCLG9CQUFvQixvT0NuQmpDLHdiQWNBLDRDREVZLG1CQUFtQiwyRUFBRSxpQkFBaUIsdUVBQUUsWUFBWSxrREFBRSxZQUFZLGtHQUFFLE9BQU87OzJGQUcxRSxvQkFBb0I7a0JBUmhDLFNBQVM7K0JBQ0UsaUJBQWlCLFlBRWpCLGNBQWMsY0FDWixJQUFJLFdBQ1AsQ0FBQyxtQkFBbUIsRUFBRSxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE9BQU8sQ0FBQyxRQUNoRixFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUU7OEJBT2QsS0FBSztzQkFBYixLQUFLO2dCQUtHLE1BQU07c0JBQWQsS0FBSztnQkFHRixXQUFXO3NCQURkLFdBQVc7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2xvcnMgfSBmcm9tICcuLi8uLi9jb3JldWkudHlwZXMnO1xuaW1wb3J0IHsgQ2FyZEJvZHlDb21wb25lbnQsIENhcmRIZWFkZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9jYXJkJztcbmltcG9ydCB7IENvbENvbXBvbmVudCwgUm93RGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZ3JpZCc7XG5pbXBvcnQgeyBOZ0NsYXNzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuZXhwb3J0IHR5cGUgV2lkZ2V0U3RhdERWYWx1ZSA9IHtcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIHZhbHVlPzogbnVtYmVyIHwgc3RyaW5nO1xufTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYy13aWRnZXQtc3RhdC1kJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3dpZGdldC1zdGF0LWQuY29tcG9uZW50Lmh0bWwnLFxuICBleHBvcnRBczogJ2NXaWRnZXRTdGF0RCcsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtDYXJkSGVhZGVyQ29tcG9uZW50LCBDYXJkQm9keUNvbXBvbmVudCwgQ29sQ29tcG9uZW50LCBSb3dEaXJlY3RpdmUsIE5nQ2xhc3NdLFxuICBob3N0OiB7IGNsYXNzOiAnY2FyZCcgfVxufSlcbmV4cG9ydCBjbGFzcyBXaWRnZXRTdGF0RENvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBTZXRzIHRoZSBjb2xvciBjb250ZXh0IG9mIHRoZSBjb21wb25lbnQgdG8gb25lIG9mIENvcmVVSeKAmXMgdGhlbWVkIGNvbG9ycy5cbiAgICogQHR5cGUgQ29sb3JzXG4gICAqL1xuICBASW5wdXQoKSBjb2xvcj86IENvbG9ycztcbiAgLyoqXG4gICAqIFZhbHVlcyBhbmQgc3VidGl0bGVzIGZvciB5b3VyIGNvbXBvbmVudC5cbiAgICogQHR5cGUgV2lkZ2V0U3RhdERWYWx1ZVxuICAgKi9cbiAgQElucHV0KCkgdmFsdWVzPzogV2lkZ2V0U3RhdERWYWx1ZVtdO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICBnZXQgaG9zdENsYXNzZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNhcmQ6IHRydWVcbiAgICB9O1xuICB9XG5cbiAgZ2V0IGhlYWRlckNsYXNzZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICdwb3NpdGlvbi1yZWxhdGl2ZSc6IHRydWUsXG4gICAgICAnZC1mbGV4JzogdHJ1ZSxcbiAgICAgICdqdXN0aWZ5LWNvbnRlbnQtY2VudGVyJzogdHJ1ZSxcbiAgICAgICdhbGlnbi1pdGVtcy1jZW50ZXInOiB0cnVlLFxuICAgICAgW2BiZy0ke3RoaXMuY29sb3J9YF06IHRoaXMuY29sb3JcbiAgICB9O1xuICB9XG59XG4iLCI8Yy1jYXJkLWhlYWRlciBbbmdDbGFzc109XCJoZWFkZXJDbGFzc2VzXCI+XG4gIDxuZy1jb250ZW50IC8+XG48L2MtY2FyZC1oZWFkZXI+XG48Yy1jYXJkLWJvZHkgY1JvdyBjbGFzcz1cInRleHQtY2VudGVyXCI+XG4gIEBmb3IgKGl0ZW0gb2YgdmFsdWVzOyB0cmFjayBpdGVtOyBsZXQgaSA9ICRpbmRleCkge1xuICAgIEBpZiAoaSAlIDIgIT09IDApIHtcbiAgICAgIDxkaXYgY2xhc3M9XCJ2clwiPjwvZGl2PlxuICAgIH1cbiAgICA8Yy1jb2w+XG4gICAgICA8ZGl2IGNsYXNzPVwiZnMtNSBmdy1zZW1pYm9sZFwiPnt7IGl0ZW0udmFsdWUgfX08L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LXVwcGVyY2FzZSB0ZXh0LWJvZHktc2Vjb25kYXJ5IHNtYWxsXCI+e3sgaXRlbS50aXRsZSB9fTwvZGl2PlxuICAgIDwvYy1jb2w+XG4gIH1cbjwvYy1jYXJkLWJvZHk+XG4iXX0=