import { booleanAttribute, computed, Directive, input } from '@angular/core';
import * as i0 from "@angular/core";
export class ListGroupDirective {
    constructor() {
        /**
         * Remove some borders and rounded corners to render list group items edge-to-edge in a parent component (e.g., `<CCard>`).
         * @type boolean
         */
        this.flush = input(false, { transform: booleanAttribute });
        /**
         * Specify horizontal layout type.
         */
        this.horizontal = input();
        this.hostClasses = computed(() => {
            const horizontal = this.horizontal();
            return {
                'list-group': true,
                'list-group-horizontal': horizontal === true || horizontal === '',
                [`list-group-horizontal-${horizontal}`]: !!horizontal && typeof horizontal !== 'boolean',
                'list-group-flush': this.flush()
            };
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: ListGroupDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.2", type: ListGroupDirective, isStandalone: true, selector: "[cListGroup]", inputs: { flush: { classPropertyName: "flush", publicName: "flush", isSignal: true, isRequired: false, transformFunction: null }, horizontal: { classPropertyName: "horizontal", publicName: "horizontal", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "class": "hostClasses()" }, classAttribute: "list-group" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: ListGroupDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[cListGroup]',
                    standalone: true,
                    host: {
                        class: 'list-group',
                        '[class]': 'hostClasses()'
                    }
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1ncm91cC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2xpc3QtZ3JvdXAvbGlzdC1ncm91cC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE0QixNQUFNLGVBQWUsQ0FBQzs7QUFXdkcsTUFBTSxPQUFPLGtCQUFrQjtJQVIvQjtRQVNFOzs7V0FHRztRQUNNLFVBQUssR0FBK0MsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7UUFFM0c7O1dBRUc7UUFDTSxlQUFVLEdBQUcsS0FBSyxFQUFtQixDQUFDO1FBRXRDLGdCQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRTtZQUNuQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDckMsT0FBTztnQkFDTCxZQUFZLEVBQUUsSUFBSTtnQkFDbEIsdUJBQXVCLEVBQUUsVUFBVSxLQUFLLElBQUksSUFBSSxVQUFVLEtBQUssRUFBRTtnQkFDakUsQ0FBQyx5QkFBeUIsVUFBVSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsVUFBVSxJQUFJLE9BQU8sVUFBVSxLQUFLLFNBQVM7Z0JBQ3hGLGtCQUFrQixFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUU7YUFDTixDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0tBQ0o7OEdBckJZLGtCQUFrQjtrR0FBbEIsa0JBQWtCOzsyRkFBbEIsa0JBQWtCO2tCQVI5QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixVQUFVLEVBQUUsSUFBSTtvQkFDaEIsSUFBSSxFQUFFO3dCQUNKLEtBQUssRUFBRSxZQUFZO3dCQUNuQixTQUFTLEVBQUUsZUFBZTtxQkFDM0I7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBib29sZWFuQXR0cmlidXRlLCBjb21wdXRlZCwgRGlyZWN0aXZlLCBpbnB1dCwgSW5wdXRTaWduYWxXaXRoVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaXplcyB9IGZyb20gJy4uL2NvcmV1aS50eXBlcyc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tjTGlzdEdyb3VwXScsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2xpc3QtZ3JvdXAnLFxuICAgICdbY2xhc3NdJzogJ2hvc3RDbGFzc2VzKCknXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTGlzdEdyb3VwRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIFJlbW92ZSBzb21lIGJvcmRlcnMgYW5kIHJvdW5kZWQgY29ybmVycyB0byByZW5kZXIgbGlzdCBncm91cCBpdGVtcyBlZGdlLXRvLWVkZ2UgaW4gYSBwYXJlbnQgY29tcG9uZW50IChlLmcuLCBgPENDYXJkPmApLlxuICAgKiBAdHlwZSBib29sZWFuXG4gICAqL1xuICByZWFkb25seSBmbHVzaDogSW5wdXRTaWduYWxXaXRoVHJhbnNmb3JtPGJvb2xlYW4sIHVua25vd24+ID0gaW5wdXQoZmFsc2UsIHsgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlIH0pO1xuXG4gIC8qKlxuICAgKiBTcGVjaWZ5IGhvcml6b250YWwgbGF5b3V0IHR5cGUuXG4gICAqL1xuICByZWFkb25seSBob3Jpem9udGFsID0gaW5wdXQ8Ym9vbGVhbiB8IFNpemVzPigpO1xuXG4gIHJlYWRvbmx5IGhvc3RDbGFzc2VzID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgIGNvbnN0IGhvcml6b250YWwgPSB0aGlzLmhvcml6b250YWwoKTtcbiAgICByZXR1cm4ge1xuICAgICAgJ2xpc3QtZ3JvdXAnOiB0cnVlLFxuICAgICAgJ2xpc3QtZ3JvdXAtaG9yaXpvbnRhbCc6IGhvcml6b250YWwgPT09IHRydWUgfHwgaG9yaXpvbnRhbCA9PT0gJycsXG4gICAgICBbYGxpc3QtZ3JvdXAtaG9yaXpvbnRhbC0ke2hvcml6b250YWx9YF06ICEhaG9yaXpvbnRhbCAmJiB0eXBlb2YgaG9yaXpvbnRhbCAhPT0gJ2Jvb2xlYW4nLFxuICAgICAgJ2xpc3QtZ3JvdXAtZmx1c2gnOiB0aGlzLmZsdXNoKClcbiAgICB9IGFzIFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+O1xuICB9KTtcbn1cbiJdfQ==