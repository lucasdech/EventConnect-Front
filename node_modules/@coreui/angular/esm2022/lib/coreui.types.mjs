export var BreakpointInfix;
(function (BreakpointInfix) {
    BreakpointInfix["xs"] = "xs";
    BreakpointInfix["sm"] = "sm";
    BreakpointInfix["md"] = "md";
    BreakpointInfix["lg"] = "lg";
    BreakpointInfix["xl"] = "xl";
    BreakpointInfix["xxl"] = "xxl";
})(BreakpointInfix || (BreakpointInfix = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZXVpLnR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9jb3JldWkudHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsTUFBTSxDQUFOLElBQVksZUFPWDtBQVBELFdBQVksZUFBZTtJQUN6Qiw0QkFBUyxDQUFBO0lBQ1QsNEJBQVMsQ0FBQTtJQUNULDRCQUFTLENBQUE7SUFDVCw0QkFBUyxDQUFBO0lBQ1QsNEJBQVMsQ0FBQTtJQUNULDhCQUFXLENBQUE7QUFDYixDQUFDLEVBUFcsZUFBZSxLQUFmLGVBQWUsUUFPMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJc0FjdGl2ZU1hdGNoT3B0aW9ucyB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmV4cG9ydCB0eXBlIE5nQ3NzQ2xhc3MgPSBzdHJpbmcgfCBzdHJpbmdbXSB8IFNldDxzdHJpbmc+IHwgeyBba2xhc3M6IHN0cmluZ106IGFueSB9O1xuXG5leHBvcnQgZW51bSBCcmVha3BvaW50SW5maXgge1xuICB4cyA9ICd4cycsXG4gIHNtID0gJ3NtJyxcbiAgbWQgPSAnbWQnLFxuICBsZyA9ICdsZycsXG4gIHhsID0gJ3hsJyxcbiAgeHhsID0gJ3h4bCdcbn1cblxuZXhwb3J0IHR5cGUgQnJlYWtwb2ludEluZml4U3RyaW5ncyA9IGtleW9mIHR5cGVvZiBCcmVha3BvaW50SW5maXg7XG5cbmV4cG9ydCB0eXBlIEJyZWFrcG9pbnRzID0gQnJlYWtwb2ludEluZml4U3RyaW5ncyB8IHN0cmluZztcblxuZXhwb3J0IHR5cGUgU2l6ZXMgPSAnc20nIHwgJ21kJyB8ICdsZycgfCAneGwnIHwgJ3h4bCcgfCBzdHJpbmc7XG5cbmV4cG9ydCB0eXBlIENvbG9ycyA9XG4gIHwgJ3ByaW1hcnknXG4gIHwgJ3NlY29uZGFyeSdcbiAgfCAnc3VjY2VzcydcbiAgfCAnZGFuZ2VyJ1xuICB8ICd3YXJuaW5nJ1xuICB8ICdpbmZvJ1xuICB8ICdkYXJrJ1xuICB8ICdsaWdodCdcbiAgfCAncHJpbWFyeS1ncmFkaWVudCdcbiAgfCAnc2Vjb25kYXJ5LWdyYWRpZW50J1xuICB8ICdzdWNjZXNzLWdyYWRpZW50J1xuICB8ICdkYW5nZXItZ3JhZGllbnQnXG4gIHwgJ3dhcm5pbmctZ3JhZGllbnQnXG4gIHwgJ2luZm8tZ3JhZGllbnQnXG4gIHwgJ2RhcmstZ3JhZGllbnQnXG4gIHwgJ2xpZ2h0LWdyYWRpZW50J1xuICB8IHN0cmluZztcblxuLy8gZXhwb3J0IHR5cGUgQ29sb3JzR3JhZGllbnQgPVxuLy8gICB8IENvbG9yc1xuLy8gICB8IGAke0NvbG9yc30tZ3JhZGllbnRgO1xuXG5leHBvcnQgdHlwZSBCYWNrZ3JvdW5kQ29sb3JzID0gQ29sb3JzIHwgJ2JvZHknIHwgJ3doaXRlJyB8ICd0cmFuc3BhcmVudCc7XG5cbmV4cG9ydCB0eXBlIERpcmVjdGlvbnMgPSAnZG93bicgfCAndXAnIHwgJ3N0YXJ0JyB8ICdlbmQnIHwgJyc7XG5cbmV4cG9ydCB0eXBlIFRleHRDb2xvcnMgPVxuICB8IENvbG9yc1xuICB8ICdwcmltYXJ5LWVtcGhhc2lzJ1xuICB8ICdzZWNvbmRhcnktZW1waGFzaXMnXG4gIHwgJ3N1Y2Nlc3MtZW1waGFzaXMnXG4gIHwgJ2Rhbmdlci1lbXBoYXNpcydcbiAgfCAnd2FybmluZy1lbXBoYXNpcydcbiAgfCAnaW5mby1lbXBoYXNpcydcbiAgfCAnbGlnaHQtZW1waGFzaXMnXG4gIHwgJ2JvZHknXG4gIHwgJ2JvZHktZW1waGFzaXMnXG4gIHwgJ2JvZHktc2Vjb25kYXJ5J1xuICB8ICdib2R5LXRlcnRpYXJ5J1xuICB8ICdibGFjaydcbiAgfCAnYmxhY2stNTAnXG4gIHwgJ3doaXRlJ1xuICB8ICd3aGl0ZS01MCdcbiAgfCBzdHJpbmc7XG5cbmV4cG9ydCB0eXBlIEFsaWdubWVudCA9ICdiYXNlbGluZScgfCAndG9wJyB8ICdtaWRkbGUnIHwgJ2JvdHRvbScgfCAndGV4dC10b3AnIHwgJ3RleHQtYm90dG9tJztcblxuZXhwb3J0IHR5cGUgQmFkZ2VQb3NpdGlvbnMgPSAndG9wLXN0YXJ0JyB8ICd0b3AtZW5kJyB8ICdib3R0b20tZW5kJyB8ICdib3R0b20tc3RhcnQnIHwgc3RyaW5nIHwgdW5kZWZpbmVkO1xuXG5leHBvcnQgdHlwZSBQbGFjZW1lbnRzID1cbiAgfCAnYXV0bydcbiAgfCAnYXV0by1zdGFydCdcbiAgfCAnYXV0by1lbmQnXG4gIHwgJ3RvcC1lbmQnXG4gIHwgJ3RvcCdcbiAgfCAndG9wLXN0YXJ0J1xuICB8ICdib3R0b20tZW5kJ1xuICB8ICdib3R0b20nXG4gIHwgJ2JvdHRvbS1zdGFydCdcbiAgfCAncmlnaHQtc3RhcnQnXG4gIHwgJ3JpZ2h0J1xuICB8ICdyaWdodC1lbmQnXG4gIHwgJ2xlZnQtc3RhcnQnXG4gIHwgJ2xlZnQnXG4gIHwgJ2xlZnQtZW5kJ1xuICB8IHVuZGVmaW5lZDtcblxuZXhwb3J0IHR5cGUgU2hhcGVzID1cbiAgfCAncm91bmRlZCdcbiAgfCAncm91bmRlZC10b3AnXG4gIHwgJ3JvdW5kZWQtZW5kJ1xuICB8ICdyb3VuZGVkLWJvdHRvbSdcbiAgfCAncm91bmRlZC1zdGFydCdcbiAgfCAncm91bmRlZC1jaXJjbGUnXG4gIHwgJ3JvdW5kZWQtcGlsbCdcbiAgfCAncm91bmRlZC0wJ1xuICB8ICdyb3VuZGVkLTEnXG4gIHwgJ3JvdW5kZWQtMidcbiAgfCAncm91bmRlZC0zJ1xuICB8IHN0cmluZztcblxuZXhwb3J0IHR5cGUgVHJpZ2dlcnMgPSAnaG92ZXInIHwgJ2ZvY3VzJyB8ICdjbGljaycgfCAnZm9jdXNpbic7XG5cbmV4cG9ydCB0eXBlIFBvc2l0aW9ucyA9ICdmaXhlZCcgfCAnc3RpY2t5JztcblxuZXhwb3J0IHR5cGUgSW5wdXRUeXBlID1cbiAgfCAnYnV0dG9uJ1xuICB8ICdjb2xvcidcbiAgfCAnZGF0ZSdcbiAgfCAnZGF0ZXRpbWUnXG4gIHwgJ2RhdGV0aW1lLWxvY2FsJ1xuICB8ICdlbWFpbCdcbiAgfCAnZmlsZSdcbiAgfCAnaGlkZGVuJ1xuICB8ICdpbWFnZSdcbiAgfCAnbW9udGgnXG4gIHwgJ251bWJlcidcbiAgfCAncGFzc3dvcmQnXG4gIHwgJ3JhbmdlJ1xuICB8ICdyZXNldCdcbiAgfCAnc2VhcmNoJ1xuICB8ICdzdWJtaXQnXG4gIHwgJ3RlbCdcbiAgfCAndGV4dCdcbiAgfCAndGltZSdcbiAgfCAndXJsJ1xuICB8ICd3ZWVrJ1xuICB8ICdjaGVja2JveCdcbiAgfCAncmFkaW8nO1xuXG5leHBvcnQgaW50ZXJmYWNlIElOYXZMaW5rUHJvcHMge1xuICBxdWVyeVBhcmFtcz86IHsgW2s6IHN0cmluZ106IGFueSB9O1xuICBmcmFnbWVudD86IHN0cmluZztcbiAgcXVlcnlQYXJhbXNIYW5kbGluZz86ICdtZXJnZScgfCAncHJlc2VydmUnIHwgJycgfCBudWxsO1xuICBwcmVzZXJ2ZUZyYWdtZW50PzogYm9vbGVhbjtcbiAgc2tpcExvY2F0aW9uQ2hhbmdlPzogYm9vbGVhbjtcbiAgcmVwbGFjZVVybD86IGJvb2xlYW47XG4gIHN0YXRlPzogeyBbazogc3RyaW5nXTogYW55IH07XG4gIHJvdXRlckxpbmtBY3RpdmVPcHRpb25zPzogeyBleGFjdDogYm9vbGVhbiB9IHwgSXNBY3RpdmVNYXRjaE9wdGlvbnM7XG4gIHJvdXRlckxpbmtBY3RpdmU/OiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgYXJpYUN1cnJlbnRXaGVuQWN0aXZlPzogJ3BhZ2UnIHwgJ3N0ZXAnIHwgJ2xvY2F0aW9uJyB8ICdkYXRlJyB8ICd0aW1lJyB8IHRydWUgfCBmYWxzZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJTmF2QXR0cmlidXRlcyB7XG4gIFtwcm9wTmFtZTogc3RyaW5nXTogYW55O1xufVxuXG5leHBvcnQgdHlwZSBCdXR0b25UeXBlID0gJ2J1dHRvbicgfCAnc3VibWl0JyB8ICdyZXNldCc7XG4iXX0=