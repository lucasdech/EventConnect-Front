import { Directive, HostBinding, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class FormLabelDirective {
    constructor() {
        /**
         * For horizontal forms set labels to 'col' and make them vertically centered with their associated form controls.
         * @type 'col'
         */
        this.col = '';
        /**
         * Size the label small or large.
         */
        this.sizing = '';
    }
    get hostClasses() {
        return {
            'form-label': true,
            'col-form-label': this.col === 'col',
            [`col-form-label-${this.sizing}`]: !!this.sizing && this.col === 'col'
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: FormLabelDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.2", type: FormLabelDirective, isStandalone: true, selector: "[cLabel]", inputs: { col: ["cLabel", "col"], sizing: "sizing" }, host: { properties: { "class": "this.hostClasses" }, classAttribute: "form-label" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: FormLabelDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[cLabel]',
                    standalone: true,
                    host: { class: 'form-label' }
                }]
        }], propDecorators: { col: [{
                type: Input,
                args: ['cLabel']
            }], sizing: [{
                type: Input
            }], hostClasses: [{
                type: HostBinding,
                args: ['class']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1sYWJlbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JldWktYW5ndWxhci9zcmMvbGliL2Zvcm0vZm9ybS1sYWJlbC9mb3JtLWxhYmVsLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTzlELE1BQU0sT0FBTyxrQkFBa0I7SUFML0I7UUFNRTs7O1dBR0c7UUFDYyxRQUFHLEdBQWUsRUFBRSxDQUFDO1FBQ3RDOztXQUVHO1FBQ00sV0FBTSxHQUE4QixFQUFFLENBQUM7S0FVakQ7SUFSQyxJQUNJLFdBQVc7UUFDYixPQUFPO1lBQ0wsWUFBWSxFQUFFLElBQUk7WUFDbEIsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLEdBQUcsS0FBSyxLQUFLO1lBQ3BDLENBQUMsa0JBQWtCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxHQUFHLEtBQUssS0FBSztTQUN2RSxDQUFDO0lBQ0osQ0FBQzs4R0FsQlUsa0JBQWtCO2tHQUFsQixrQkFBa0I7OzJGQUFsQixrQkFBa0I7a0JBTDlCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLFVBQVU7b0JBQ3BCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFO2lCQUM5Qjs4QkFNa0IsR0FBRztzQkFBbkIsS0FBSzt1QkFBQyxRQUFRO2dCQUlOLE1BQU07c0JBQWQsS0FBSztnQkFHRixXQUFXO3NCQURkLFdBQVc7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tjTGFiZWxdJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaG9zdDogeyBjbGFzczogJ2Zvcm0tbGFiZWwnIH1cbn0pXG5leHBvcnQgY2xhc3MgRm9ybUxhYmVsRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIEZvciBob3Jpem9udGFsIGZvcm1zIHNldCBsYWJlbHMgdG8gJ2NvbCcgYW5kIG1ha2UgdGhlbSB2ZXJ0aWNhbGx5IGNlbnRlcmVkIHdpdGggdGhlaXIgYXNzb2NpYXRlZCBmb3JtIGNvbnRyb2xzLlxuICAgKiBAdHlwZSAnY29sJ1xuICAgKi9cbiAgQElucHV0KCdjTGFiZWwnKSBjb2w6ICdjb2wnIHwgJycgPSAnJztcbiAgLyoqXG4gICAqIFNpemUgdGhlIGxhYmVsIHNtYWxsIG9yIGxhcmdlLlxuICAgKi9cbiAgQElucHV0KCkgc2l6aW5nOiAnJyB8ICdzbScgfCAnbGcnIHwgc3RyaW5nID0gJyc7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXG4gIGdldCBob3N0Q2xhc3NlcygpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICAnZm9ybS1sYWJlbCc6IHRydWUsXG4gICAgICAnY29sLWZvcm0tbGFiZWwnOiB0aGlzLmNvbCA9PT0gJ2NvbCcsXG4gICAgICBbYGNvbC1mb3JtLWxhYmVsLSR7dGhpcy5zaXppbmd9YF06ICEhdGhpcy5zaXppbmcgJiYgdGhpcy5jb2wgPT09ICdjb2wnXG4gICAgfTtcbiAgfVxufVxuIl19