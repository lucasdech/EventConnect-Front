import { computed, contentChild, Directive, input } from '@angular/core';
import { PlaceholderDirective } from './placeholder.directive';
import * as i0 from "@angular/core";
export class PlaceholderAnimationDirective {
    constructor() {
        /**
         * Animation type for placeholder
         * @type 'glow' | 'wave'
         * @default undefined
         */
        this.animation = input(undefined, {
            alias: 'cPlaceholderAnimation'
        });
        this.placeholder = contentChild(PlaceholderDirective);
        this.hostClasses = computed(() => {
            return {
                [`placeholder-${this.animation()}`]: this.placeholder()?.visible() && !!this.animation()
            };
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: PlaceholderAnimationDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.2.0", version: "18.2.2", type: PlaceholderAnimationDirective, isStandalone: true, selector: "[cPlaceholderAnimation]", inputs: { animation: { classPropertyName: "animation", publicName: "cPlaceholderAnimation", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "class": "hostClasses()" } }, queries: [{ propertyName: "placeholder", first: true, predicate: PlaceholderDirective, descendants: true, isSignal: true }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: PlaceholderAnimationDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[cPlaceholderAnimation]',
                    standalone: true,
                    host: {
                        '[class]': 'hostClasses()'
                    }
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXItYW5pbWF0aW9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvcGxhY2Vob2xkZXIvcGxhY2Vob2xkZXItYW5pbWF0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDOztBQVMvRCxNQUFNLE9BQU8sNkJBQTZCO0lBUDFDO1FBUUU7Ozs7V0FJRztRQUNNLGNBQVMsR0FBNkMsS0FBSyxDQUE4QixTQUFTLEVBQUU7WUFDM0csS0FBSyxFQUFFLHVCQUF1QjtTQUMvQixDQUFDLENBQUM7UUFFTSxnQkFBVyxHQUFHLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBRWpELGdCQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRTtZQUNuQyxPQUFPO2dCQUNMLENBQUMsZUFBZSxJQUFJLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTthQUN6RixDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7S0FDSjs4R0FqQlksNkJBQTZCO2tHQUE3Qiw2QkFBNkIsNFVBVUosb0JBQW9COzsyRkFWN0MsNkJBQTZCO2tCQVB6QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFVBQVUsRUFBRSxJQUFJO29CQUNoQixJQUFJLEVBQUU7d0JBQ0osU0FBUyxFQUFFLGVBQWU7cUJBQzNCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tcHV0ZWQsIGNvbnRlbnRDaGlsZCwgRGlyZWN0aXZlLCBpbnB1dCwgSW5wdXRTaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBsYWNlaG9sZGVyRGlyZWN0aXZlIH0gZnJvbSAnLi9wbGFjZWhvbGRlci5kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY1BsYWNlaG9sZGVyQW5pbWF0aW9uXScsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzXSc6ICdob3N0Q2xhc3NlcygpJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIFBsYWNlaG9sZGVyQW5pbWF0aW9uRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIEFuaW1hdGlvbiB0eXBlIGZvciBwbGFjZWhvbGRlclxuICAgKiBAdHlwZSAnZ2xvdycgfCAnd2F2ZSdcbiAgICogQGRlZmF1bHQgdW5kZWZpbmVkXG4gICAqL1xuICByZWFkb25seSBhbmltYXRpb246IElucHV0U2lnbmFsPCdnbG93JyB8ICd3YXZlJyB8IHVuZGVmaW5lZD4gPSBpbnB1dDwnZ2xvdycgfCAnd2F2ZScgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCwge1xuICAgIGFsaWFzOiAnY1BsYWNlaG9sZGVyQW5pbWF0aW9uJ1xuICB9KTtcblxuICByZWFkb25seSBwbGFjZWhvbGRlciA9IGNvbnRlbnRDaGlsZChQbGFjZWhvbGRlckRpcmVjdGl2ZSk7XG5cbiAgcmVhZG9ubHkgaG9zdENsYXNzZXMgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIFtgcGxhY2Vob2xkZXItJHt0aGlzLmFuaW1hdGlvbigpfWBdOiB0aGlzLnBsYWNlaG9sZGVyKCk/LnZpc2libGUoKSAmJiAhIXRoaXMuYW5pbWF0aW9uKClcbiAgICB9O1xuICB9KTtcbn1cbiJdfQ==