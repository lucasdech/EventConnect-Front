import { booleanAttribute, computed, Directive, input } from '@angular/core';
import * as i0 from "@angular/core";
export class PlaceholderDirective {
    constructor() {
        /**
         * placeholder toggler
         * @type boolean
         * @default false
         */
        this.visible = input(false, {
            transform: booleanAttribute,
            alias: 'cPlaceholder'
        });
        /**
         * Size the placeholder xs, small, large.
         */
        this.size = input(undefined, { alias: 'cPlaceholderSize' });
        this.ariaHidden = computed(() => {
            return this.visible() ? null : true;
        });
        this.hostClasses = computed(() => {
            return {
                placeholder: this.visible(),
                [`placeholder-${this.size()}`]: !!this.size()
            };
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: PlaceholderDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.2", type: PlaceholderDirective, isStandalone: true, selector: "[cPlaceholder]", inputs: { visible: { classPropertyName: "visible", publicName: "cPlaceholder", isSignal: true, isRequired: false, transformFunction: null }, size: { classPropertyName: "size", publicName: "cPlaceholderSize", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "class": "hostClasses()", "attr.aria-hidden": "ariaHidden()" } }, exportAs: ["cPlaceholder"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: PlaceholderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[cPlaceholder]',
                    exportAs: 'cPlaceholder',
                    standalone: true,
                    host: {
                        '[class]': 'hostClasses()',
                        '[attr.aria-hidden]': 'ariaHidden()'
                    }
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9wbGFjZWhvbGRlci9wbGFjZWhvbGRlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE0QixNQUFNLGVBQWUsQ0FBQzs7QUFXdkcsTUFBTSxPQUFPLG9CQUFvQjtJQVRqQztRQVVFOzs7O1dBSUc7UUFDTSxZQUFPLEdBQStDLEtBQUssQ0FBbUIsS0FBSyxFQUFFO1lBQzVGLFNBQVMsRUFBRSxnQkFBZ0I7WUFDM0IsS0FBSyxFQUFFLGNBQWM7U0FDdEIsQ0FBQyxDQUFDO1FBRUg7O1dBRUc7UUFDTSxTQUFJLEdBQUcsS0FBSyxDQUFpQyxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDO1FBRXZGLGVBQVUsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUN0QyxDQUFDLENBQUMsQ0FBQztRQUVNLGdCQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRTtZQUNuQyxPQUFPO2dCQUNMLFdBQVcsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUMzQixDQUFDLGVBQWUsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTthQUM5QyxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7S0FDSjs4R0ExQlksb0JBQW9CO2tHQUFwQixvQkFBb0I7OzJGQUFwQixvQkFBb0I7a0JBVGhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixJQUFJLEVBQUU7d0JBQ0osU0FBUyxFQUFFLGVBQWU7d0JBQzFCLG9CQUFvQixFQUFFLGNBQWM7cUJBQ3JDO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYm9vbGVhbkF0dHJpYnV0ZSwgY29tcHV0ZWQsIERpcmVjdGl2ZSwgaW5wdXQsIElucHV0U2lnbmFsV2l0aFRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY1BsYWNlaG9sZGVyXScsXG4gIGV4cG9ydEFzOiAnY1BsYWNlaG9sZGVyJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaG9zdDoge1xuICAgICdbY2xhc3NdJzogJ2hvc3RDbGFzc2VzKCknLFxuICAgICdbYXR0ci5hcmlhLWhpZGRlbl0nOiAnYXJpYUhpZGRlbigpJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIFBsYWNlaG9sZGVyRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIHBsYWNlaG9sZGVyIHRvZ2dsZXJcbiAgICogQHR5cGUgYm9vbGVhblxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgcmVhZG9ubHkgdmlzaWJsZTogSW5wdXRTaWduYWxXaXRoVHJhbnNmb3JtPGJvb2xlYW4sIHVua25vd24+ID0gaW5wdXQ8Ym9vbGVhbiwgdW5rbm93bj4oZmFsc2UsIHtcbiAgICB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUsXG4gICAgYWxpYXM6ICdjUGxhY2Vob2xkZXInXG4gIH0pO1xuXG4gIC8qKlxuICAgKiBTaXplIHRoZSBwbGFjZWhvbGRlciB4cywgc21hbGwsIGxhcmdlLlxuICAgKi9cbiAgcmVhZG9ubHkgc2l6ZSA9IGlucHV0PCd4cycgfCAnc20nIHwgJ2xnJyB8IHVuZGVmaW5lZD4odW5kZWZpbmVkLCB7IGFsaWFzOiAnY1BsYWNlaG9sZGVyU2l6ZScgfSk7XG5cbiAgcmVhZG9ubHkgYXJpYUhpZGRlbiA9IGNvbXB1dGVkKCgpID0+IHtcbiAgICByZXR1cm4gdGhpcy52aXNpYmxlKCkgPyBudWxsIDogdHJ1ZTtcbiAgfSk7XG5cbiAgcmVhZG9ubHkgaG9zdENsYXNzZXMgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBsYWNlaG9sZGVyOiB0aGlzLnZpc2libGUoKSxcbiAgICAgIFtgcGxhY2Vob2xkZXItJHt0aGlzLnNpemUoKX1gXTogISF0aGlzLnNpemUoKVxuICAgIH07XG4gIH0pO1xufVxuIl19