import { booleanAttribute, Component, HostBinding, Input } from '@angular/core';
import { NgTemplateOutlet } from '@angular/common';
import { RouterModule } from '@angular/router';
import { HtmlAttributesDirective } from '../../shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
export class BreadcrumbItemComponent {
    get ariaCurrent() {
        return this.active ? 'page' : null;
    }
    get hostClasses() {
        return {
            'breadcrumb-item': true,
            active: this.active
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: BreadcrumbItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.2", type: BreadcrumbItemComponent, isStandalone: true, selector: "c-breadcrumb-item", inputs: { active: ["active", "active", booleanAttribute], url: "url", attributes: "attributes", linkProps: "linkProps" }, host: { properties: { "attr.aria-current": "this.ariaCurrent", "class": "this.hostClasses" } }, ngImport: i0, template: "@if (!active) {\n  <a [routerLink]=\"url\"\n     [cHtmlAttr]=\"attributes ?? {}\"\n     [target]=\"attributes?.['target']\"\n     [queryParams]=\"linkProps?.queryParams ?? null\"\n     [fragment]=\"linkProps?.fragment\"\n     [queryParamsHandling]=\"linkProps?.queryParamsHandling ?? null\"\n     [preserveFragment]=\"linkProps?.preserveFragment ?? false\"\n     [skipLocationChange]=\"linkProps?.skipLocationChange ?? false\"\n     [replaceUrl]=\"linkProps?.replaceUrl ?? false\"\n     [state]=\"linkProps?.state ?? {}\"\n  >\n    <ng-container *ngTemplateOutlet=\"defaultBreadcrumbItemContentTemplate\" />\n  </a>\n} @else {\n  <span [cHtmlAttr]=\"attributes ?? {}\">\n      <ng-container *ngTemplateOutlet=\"defaultBreadcrumbItemContentTemplate\" />\n  </span>\n}\n\n<ng-template #defaultBreadcrumbItemContentTemplate>\n  <ng-content />\n</ng-template>\n", styles: [":host{display:list-item;text-align:-webkit-match-parent;text-align:match-parent}\n"], dependencies: [{ kind: "ngmodule", type: RouterModule }, { kind: "directive", type: i1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: HtmlAttributesDirective, selector: "[cHtmlAttr]", inputs: ["cHtmlAttr"], exportAs: ["cHtmlAttr"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: BreadcrumbItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c-breadcrumb-item', standalone: true, imports: [RouterModule, NgTemplateOutlet, HtmlAttributesDirective], template: "@if (!active) {\n  <a [routerLink]=\"url\"\n     [cHtmlAttr]=\"attributes ?? {}\"\n     [target]=\"attributes?.['target']\"\n     [queryParams]=\"linkProps?.queryParams ?? null\"\n     [fragment]=\"linkProps?.fragment\"\n     [queryParamsHandling]=\"linkProps?.queryParamsHandling ?? null\"\n     [preserveFragment]=\"linkProps?.preserveFragment ?? false\"\n     [skipLocationChange]=\"linkProps?.skipLocationChange ?? false\"\n     [replaceUrl]=\"linkProps?.replaceUrl ?? false\"\n     [state]=\"linkProps?.state ?? {}\"\n  >\n    <ng-container *ngTemplateOutlet=\"defaultBreadcrumbItemContentTemplate\" />\n  </a>\n} @else {\n  <span [cHtmlAttr]=\"attributes ?? {}\">\n      <ng-container *ngTemplateOutlet=\"defaultBreadcrumbItemContentTemplate\" />\n  </span>\n}\n\n<ng-template #defaultBreadcrumbItemContentTemplate>\n  <ng-content />\n</ng-template>\n", styles: [":host{display:list-item;text-align:-webkit-match-parent;text-align:match-parent}\n"] }]
        }], propDecorators: { active: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], url: [{
                type: Input
            }], attributes: [{
                type: Input
            }], linkProps: [{
                type: Input
            }], ariaCurrent: [{
                type: HostBinding,
                args: ['attr.aria-current']
            }], hostClasses: [{
                type: HostBinding,
                args: ['class']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvYnJlYWRjcnVtYi9icmVhZGNydW1iLWl0ZW0vYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvYnJlYWRjcnVtYi9icmVhZGNydW1iLWl0ZW0vYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sY0FBYyxDQUFDOzs7QUFVdkQsTUFBTSxPQUFPLHVCQUF1QjtJQXVCbEMsSUFBc0MsV0FBVztRQUMvQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUNJLFdBQVc7UUFDYixPQUFPO1lBQ0wsaUJBQWlCLEVBQUUsSUFBSTtZQUN2QixNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU07U0FDcEIsQ0FBQztJQUNKLENBQUM7OEdBakNVLHVCQUF1QjtrR0FBdkIsdUJBQXVCLDRGQU1kLGdCQUFnQiwyTENwQnRDLDIxQkF1QkEsMklEWFksWUFBWSxnUkFBRSxnQkFBZ0Isb0pBQUUsdUJBQXVCOzsyRkFFdEQsdUJBQXVCO2tCQVBuQyxTQUFTOytCQUNFLG1CQUFtQixjQUdqQixJQUFJLFdBQ1AsQ0FBQyxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsdUJBQXVCLENBQUM7OEJBUTFCLE1BQU07c0JBQTdDLEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7Z0JBSzdCLEdBQUc7c0JBQVgsS0FBSztnQkFLRyxVQUFVO3NCQUFsQixLQUFLO2dCQUtHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBRWdDLFdBQVc7c0JBQWhELFdBQVc7dUJBQUMsbUJBQW1CO2dCQUs1QixXQUFXO3NCQURkLFdBQVc7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJvb2xlYW5BdHRyaWJ1dGUsIENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ1RlbXBsYXRlT3V0bGV0IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7IEh0bWxBdHRyaWJ1dGVzRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vc2hhcmVkJztcbmltcG9ydCB7IElOYXZBdHRyaWJ1dGVzLCBJTmF2TGlua1Byb3BzIH0gZnJvbSAnLi9icmVhZGNydW1iLWl0ZW0nO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjLWJyZWFkY3J1bWItaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9icmVhZGNydW1iLWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9icmVhZGNydW1iLWl0ZW0uY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1JvdXRlck1vZHVsZSwgTmdUZW1wbGF0ZU91dGxldCwgSHRtbEF0dHJpYnV0ZXNEaXJlY3RpdmVdXG59KVxuZXhwb3J0IGNsYXNzIEJyZWFkY3J1bWJJdGVtQ29tcG9uZW50IHtcblxuICAvKipcbiAgICogVG9nZ2xlIHRoZSBhY3RpdmUgc3RhdGUgZm9yIHRoZSBjb21wb25lbnQuIFtkb2NzXVxuICAgKiBAdHlwZSBib29sZWFuXG4gICAqL1xuICBASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSkgYWN0aXZlPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFRoZSBgdXJsYCBwcm9wIGZvciB0aGUgaW5uZXIgYFtyb3V0ZXJMaW5rXWAgZGlyZWN0aXZlLiBbZG9jc11cbiAgICogQHR5cGUgc3RyaW5nXG4gICAqL1xuICBASW5wdXQoKSB1cmw/OiBzdHJpbmcgfCBhbnlbXTtcbiAgLyoqXG4gICAqIEFkZGl0aW9uYWwgaHRtbCBhdHRyaWJ1dGVzIGZvciBsaW5rLiBbZG9jc11cbiAgICogQHR5cGUgSU5hdkF0dHJpYnV0ZXNcbiAgICovXG4gIEBJbnB1dCgpIGF0dHJpYnV0ZXM/OiBJTmF2QXR0cmlidXRlcztcbiAgLyoqXG4gICAqIFNvbWUgYE5hdmlnYXRpb25FeHRyYXNgIHByb3BzIGZvciB0aGUgaW5uZXIgYFtyb3V0ZXJMaW5rXWAgZGlyZWN0aXZlIGFuZCBgcm91dGVyTGlua0FjdGl2ZU9wdGlvbnNgLiBbZG9jc11cbiAgICogQHR5cGUgSU5hdkxpbmtQcm9wc1xuICAgKi9cbiAgQElucHV0KCkgbGlua1Byb3BzPzogSU5hdkxpbmtQcm9wcztcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS1jdXJyZW50JykgZ2V0IGFyaWFDdXJyZW50KCk6IHN0cmluZyB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLmFjdGl2ZSA/ICdwYWdlJyA6IG51bGw7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgZ2V0IGhvc3RDbGFzc2VzKCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICdicmVhZGNydW1iLWl0ZW0nOiB0cnVlLFxuICAgICAgYWN0aXZlOiB0aGlzLmFjdGl2ZVxuICAgIH07XG4gIH1cbn1cbiIsIkBpZiAoIWFjdGl2ZSkge1xuICA8YSBbcm91dGVyTGlua109XCJ1cmxcIlxuICAgICBbY0h0bWxBdHRyXT1cImF0dHJpYnV0ZXMgPz8ge31cIlxuICAgICBbdGFyZ2V0XT1cImF0dHJpYnV0ZXM/LlsndGFyZ2V0J11cIlxuICAgICBbcXVlcnlQYXJhbXNdPVwibGlua1Byb3BzPy5xdWVyeVBhcmFtcyA/PyBudWxsXCJcbiAgICAgW2ZyYWdtZW50XT1cImxpbmtQcm9wcz8uZnJhZ21lbnRcIlxuICAgICBbcXVlcnlQYXJhbXNIYW5kbGluZ109XCJsaW5rUHJvcHM/LnF1ZXJ5UGFyYW1zSGFuZGxpbmcgPz8gbnVsbFwiXG4gICAgIFtwcmVzZXJ2ZUZyYWdtZW50XT1cImxpbmtQcm9wcz8ucHJlc2VydmVGcmFnbWVudCA/PyBmYWxzZVwiXG4gICAgIFtza2lwTG9jYXRpb25DaGFuZ2VdPVwibGlua1Byb3BzPy5za2lwTG9jYXRpb25DaGFuZ2UgPz8gZmFsc2VcIlxuICAgICBbcmVwbGFjZVVybF09XCJsaW5rUHJvcHM/LnJlcGxhY2VVcmwgPz8gZmFsc2VcIlxuICAgICBbc3RhdGVdPVwibGlua1Byb3BzPy5zdGF0ZSA/PyB7fVwiXG4gID5cbiAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiZGVmYXVsdEJyZWFkY3J1bWJJdGVtQ29udGVudFRlbXBsYXRlXCIgLz5cbiAgPC9hPlxufSBAZWxzZSB7XG4gIDxzcGFuIFtjSHRtbEF0dHJdPVwiYXR0cmlidXRlcyA/PyB7fVwiPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImRlZmF1bHRCcmVhZGNydW1iSXRlbUNvbnRlbnRUZW1wbGF0ZVwiIC8+XG4gIDwvc3Bhbj5cbn1cblxuPG5nLXRlbXBsYXRlICNkZWZhdWx0QnJlYWRjcnVtYkl0ZW1Db250ZW50VGVtcGxhdGU+XG4gIDxuZy1jb250ZW50IC8+XG48L25nLXRlbXBsYXRlPlxuIl19