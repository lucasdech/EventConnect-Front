import { NgClass } from '@angular/common';
import { Component, computed, ElementRef, inject, Input, Renderer2, signal, ViewChild } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { HtmlAttributesDirective } from '../shared/html-attr.directive';
import { IconSetService } from '../icon-set';
import { transformName } from './icon.utils';
import * as i0 from "@angular/core";
export class IconComponent {
    #renderer;
    #elementRef;
    #sanitizer;
    #iconSet;
    constructor() {
        this.#renderer = inject(Renderer2);
        this.#elementRef = inject(ElementRef);
        this.#sanitizer = inject(DomSanitizer);
        this.#iconSet = inject(IconSetService);
        this.#content = signal('');
        this.attributes = { role: 'img' };
        this.size = '';
        this.use = '';
        this.#name = signal('');
        this.innerHtml = computed(() => {
            const code = Array.isArray(this.code()) ? (this.code()[1] ?? this.code()[0] ?? '') : this.code() || '';
            // todo proper sanitize
            // const sanitized = this.sanitizer.sanitize(SecurityContext.HTML, code);
            return this.#sanitizer.bypassSecurityTrustHtml(this.titleCode + code || '');
        });
        this.code = computed(() => {
            if (this.#content()) {
                return this.#content();
            }
            if (this.#iconSet && this.#name()) {
                return this.#iconSet.getIcon(this.#name());
            }
            if (this.#name() && !this.#iconSet?.icons[this.#name()]) {
                console.warn(`c-icon component: icon name '${this.#name()}' does not exist for IconSet service. ` +
                    `To use icon by 'name' prop you need to add it to IconSet service. \n`, this.#name());
            }
            return '';
        });
        this.scale = computed(() => {
            return Array.isArray(this.code()) && this.code().length > 1 ? `0 0 ${this.code()[0]}` : '0 0 64 64';
        });
        this.#renderer.setStyle(this.#elementRef.nativeElement, 'display', 'none');
    }
    set content(value) {
        this.#content.set(value);
    }
    #content;
    set name(value) {
        this.#name.set(value);
    }
    get name() {
        return this.#name();
    }
    #name;
    set viewBox(viewBox) {
        this._viewBox = viewBox;
    }
    get viewBox() {
        return this._viewBox ?? this.scale();
    }
    ngAfterViewInit() {
        this.#elementRef.nativeElement.classList.forEach((item) => {
            this.#renderer.addClass(this.svgElementRef.nativeElement, item);
        });
        const parentElement = this.#renderer.parentNode(this.#elementRef.nativeElement);
        const svgElement = this.svgElementRef.nativeElement;
        this.#renderer.insertBefore(parentElement, svgElement, this.#elementRef.nativeElement);
        this.#renderer.removeChild(parentElement, this.#elementRef.nativeElement);
    }
    get titleCode() {
        return this.title ? `<title>${this.title}</title>` : '';
    }
    get computedSize() {
        const addCustom = !this.size && (this.width || this.height);
        return this.size === 'custom' || addCustom ? 'custom-size' : this.size;
    }
    get computedClasses() {
        const classes = {
            icon: true,
            [`icon-${this.computedSize}`]: !!this.computedSize
        };
        return this.customClasses ?? classes;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: IconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.2", type: IconComponent, isStandalone: true, selector: "c-icon", inputs: { content: "content", attributes: "attributes", customClasses: "customClasses", size: "size", title: "title", use: "use", height: "height", width: "width", name: ["name", "name", transformName], viewBox: "viewBox" }, host: { attributes: { "ngSkipHydration": "true" } }, viewQueries: [{ propertyName: "svgElementRef", first: true, predicate: ["svgElement"], descendants: true, read: ElementRef }], exportAs: ["cIconComponent"], ngImport: i0, template: "@if (!use && !!code) {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    [attr.width]=\"width\"\n    [attr.height]=\"height || width\"\n    [attr.viewBox]=\"viewBox\"\n    [innerHtml]=\"innerHtml()\"\n    [ngClass]=\"computedClasses\"\n    [cHtmlAttr]=\"attributes\"\n    aria-hidden=\"true\"\n    pointer-events=\"none\"\n    role=\"img\"\n    #svgElement\n  >\n  </svg>\n} @else if (use) {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    [attr.width]=\"width\"\n    [attr.height]=\"height || width\"\n    [ngClass]=\"computedClasses\"\n    [cHtmlAttr]=\"attributes\"\n    aria-hidden=\"true\"\n    pointer-events=\"none\"\n    role=\"img\"\n    #svgElement\n  >\n    <use [attr.href]=\"use\"></use>\n  </svg>\n}\n", styles: [".icon{display:inline-block;color:inherit;text-align:center;vertical-align:-.125rem;fill:currentColor}.icon:not(.icon-c-s):not(.icon-custom-size){width:1rem;height:1rem;font-size:1rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-xxl{width:2rem;height:2rem;font-size:2rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-xl{width:1.5rem;height:1.5rem;font-size:1.5rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-lg{width:1.25rem;height:1.25rem;font-size:1.25rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-sm{width:.875rem;height:.875rem;font-size:.875rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-3xl{width:3rem;height:3rem;font-size:3rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-4xl{width:4rem;height:4rem;font-size:4rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-5xl{width:5rem;height:5rem;font-size:5rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-6xl{width:6rem;height:6rem;font-size:6rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-7xl{width:7rem;height:7rem;font-size:7rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-8xl{width:8rem;height:8rem;font-size:8rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-9xl{width:9rem;height:9rem;font-size:9rem}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: HtmlAttributesDirective, selector: "[cHtmlAttr]", inputs: ["cHtmlAttr"], exportAs: ["cHtmlAttr"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: IconComponent, decorators: [{
            type: Component,
            args: [{ exportAs: 'cIconComponent', imports: [NgClass, HtmlAttributesDirective], selector: 'c-icon', standalone: true, host: { ngSkipHydration: 'true' }, template: "@if (!use && !!code) {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    [attr.width]=\"width\"\n    [attr.height]=\"height || width\"\n    [attr.viewBox]=\"viewBox\"\n    [innerHtml]=\"innerHtml()\"\n    [ngClass]=\"computedClasses\"\n    [cHtmlAttr]=\"attributes\"\n    aria-hidden=\"true\"\n    pointer-events=\"none\"\n    role=\"img\"\n    #svgElement\n  >\n  </svg>\n} @else if (use) {\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    [attr.width]=\"width\"\n    [attr.height]=\"height || width\"\n    [ngClass]=\"computedClasses\"\n    [cHtmlAttr]=\"attributes\"\n    aria-hidden=\"true\"\n    pointer-events=\"none\"\n    role=\"img\"\n    #svgElement\n  >\n    <use [attr.href]=\"use\"></use>\n  </svg>\n}\n", styles: [".icon{display:inline-block;color:inherit;text-align:center;vertical-align:-.125rem;fill:currentColor}.icon:not(.icon-c-s):not(.icon-custom-size){width:1rem;height:1rem;font-size:1rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-xxl{width:2rem;height:2rem;font-size:2rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-xl{width:1.5rem;height:1.5rem;font-size:1.5rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-lg{width:1.25rem;height:1.25rem;font-size:1.25rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-sm{width:.875rem;height:.875rem;font-size:.875rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-3xl{width:3rem;height:3rem;font-size:3rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-4xl{width:4rem;height:4rem;font-size:4rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-5xl{width:5rem;height:5rem;font-size:5rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-6xl{width:6rem;height:6rem;font-size:6rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-7xl{width:7rem;height:7rem;font-size:7rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-8xl{width:8rem;height:8rem;font-size:8rem}.icon:not(.icon-c-s):not(.icon-custom-size).icon-9xl{width:9rem;height:9rem;font-size:9rem}\n"] }]
        }], ctorParameters: () => [], propDecorators: { content: [{
                type: Input
            }], attributes: [{
                type: Input
            }], customClasses: [{
                type: Input
            }], size: [{
                type: Input
            }], title: [{
                type: Input
            }], use: [{
                type: Input
            }], height: [{
                type: Input
            }], width: [{
                type: Input
            }], name: [{
                type: Input,
                args: [{ transform: transformName }]
            }], viewBox: [{
                type: Input
            }], svgElementRef: [{
                type: ViewChild,
                args: ['svgElement', { read: ElementRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,